---
version: "3"

tasks:
  apply-darwin:
    desc: Build and apply nix-darwin configuration
    silent: true
    summary: |
      Args:
        host: Host to build and deploy to (required)
    requires:
      vars:
        - host
    cmds:
      - task: build-darwin
        vars:
          host: "{{ .host }}"
      - task: .prompt_to_continue
      - darwin-rebuild switch --flake "{{.ROOT_DIR}}/#{{.host}}"
    preconditions:
      - sh: which nix
        msg: "nix not found"
      - sh: which darwin-rebuild
        msg: "darwin-rebuild not found"

  build-darwin:
    desc: Build nix-darwin configuration
    silent: true
    summary: |
      Args:
        host: Host to build and deploy to (required)
    requires:
      vars:
        - host
    cmds:
      - darwin-rebuild build --flake "{{.ROOT_DIR}}/#{{.host}}"
      - nvd diff /run/current-system result
    preconditions:
      - sh: which nix
        msg: "nix not found"
      - sh: which darwin-rebuild
        msg: "darwin-rebuild not found"

  build-nixos:
    desc: Build nixos configuration
    silent: true
    vars:
      ssh_user: ryan
    summary: |
      Args:
        host: Host to build and deploy to (required)
    requires:
      vars:
        - host
    cmds:
      - nix-shell -p nixos-rebuild --run 'nixos-rebuild build --flake .#{{.host}} --fast --use-remote-sudo --build-host "{{.ssh_user}}@{{.host}}.bjw-s.internal" --target-host "{{.ssh_user}}@{{.host}}.bjw-s.internal"'
    preconditions:
      - sh: which nix
        msg: "nix not found"
      - sh: which nixos-rebuild
        msg: "nixos-rebuild not found"

  apply-nixos:
    desc: Build and apply nixos configuration
    silent: true
    vars:
      ssh_user: ryan
    summary: |
      Args:
        host: Host to build and deploy to (required)
    requires:
      vars:
        - host
    cmds:
      - nix-shell -p nixos-rebuild --run 'nixos-rebuild switch --flake .#{{.host}} --fast --use-remote-sudo --build-host "{{.ssh_user}}@{{.host}}.bjw-s.internal" --target-host "{{.ssh_user}}@{{.host}}.bjw-s.internal"'
    preconditions:
      - sh: which nix
        msg: "nix not found"
      - sh: which nixos-rebuild
        msg: "nixos-rebuild not found"

  test-vm:
    desc: Build and run a NixOS configuration in a QEMU VM for testing
    silent: true
    summary: |
      Builds the VM derivation for the specified NixOS host and runs it.
      This allows safe testing of system-level changes without deploying.
      Args:
        host: NixOS host to test (required)
    requires:
      vars:
        - host
    cmds:
      - echo "üî® Building VM for {{.host}}..."
      - nix build .#nixosConfigurations.{{.host}}.config.system.build.vm --show-trace
      - echo "üöÄ Running VM for {{.host}}. Close the VM window to exit."
      - echo "üí° Note: This VM runs in isolation and won't affect your actual system."
      - ./result/bin/run-{{.host}}-vm
    preconditions:
      - sh: which nix
        msg: "nix not found"
      - sh: 'echo "{{.host}}" | grep -E "^(luna|rydev|nixos-bootstrap)$"'
        msg: "VM testing only available for NixOS hosts (luna, rydev, nixos-bootstrap)"
      - sh: 'test "{{OS}}" != "darwin"'
        msg: |
          ‚ùå VM testing is not supported on macOS (Darwin)

          The 'nix-test-vm' command requires QEMU, which has compatibility issues on macOS.
          Please run this command on a Linux host, or use alternative testing methods:
          - Build-only validation for a host: /nix-deploy host=<hostname> --build-only
          - General configuration check: /nix-validate

  .prompt_to_continue:
    internal: true
    prompt: Do you want to continue applying this configuration?
